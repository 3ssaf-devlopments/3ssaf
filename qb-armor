-- Get QBCore framework object to access all QBCore functions
local QBCore = exports['qb-core']:GetCoreObject()

-- Register network event that will be triggered when player uses armor item
RegisterNetEvent('customarmor:useArmor', function()
    -- Get the player's character/ped ID
    local playerPed = PlayerPedId()
    
    -- Define the item name that should exist in database and inventory
    local armorItem = 'armor'
    
    -- Set target armor amount (75 out of 100 maximum)
    local targetArmor = 75
    
    -- Set waiting time in milliseconds (8000ms = 8 seconds)
    local useTime = 8000
    
    -- Check if player actually has the armor item in their inventory
    QBCore.Functions.TriggerCallback('QBCore:HasItem', function(hasItem)
        -- If player has the item, proceed with armor application
        if hasItem then
            -- Get player's current armor level (0-100)
            local currentArmor = GetPedArmour(playerPed)
            
            -- Check if current armor is already at or above target level
            if currentArmor >= targetArmor then
                -- Show error message if armor is already sufficient
                QBCore.Functions.Notify("Your armor is already good!", "error")
                return -- Exit function early
            end
            
            -- Show waiting message to inform player about delay
            QBCore.Functions.Notify("Using armor... Please wait 8 seconds", "primary")
            
            -- Wait for specified time (8 seconds) before applying armor
            Wait(useTime)
            
            -- Apply armor to player after waiting period
            SetPedArmour(playerPed, targetArmor)
            
            -- Show success message to confirm armor application
            QBCore.Functions.Notify("Armor applied successfully!", "success")
        else
            -- Show error message if player doesn't have the required item
            QBCore.Functions.Notify("You don't have any armor!", "error")
        end
    end, armorItem) -- Pass item name to check
end)

-- Configuration file for armor script
-- This file contains all customizable settings
Config = {}

-- Armor Settings
-- These settings control how the armor system works
Config.Armor = {
    -- Amount of armor to apply (0-100, where 100 is maximum armor)
    targetAmount = 75,
    
    -- Time in milliseconds to wait before applying armor (8000ms = 8 seconds)
    useTime = 8000,
    
    -- Name of the item in database and inventory
    itemName = 'armor',
    
    -- Whether to remove item from inventory after use (false = keep item)
    removeOnUse = false,
    
    -- Maximum possible armor value in the game
    maxArmor = 100
}

-- Notification Messages
-- Customize all messages shown to players
Config.Messages = {
    -- Message when player doesn't have the armor item
    noItem = "You don't have any armor!",
    
    -- Message when player already has sufficient armor
    alreadyGood = "Your armor is already good!",
    
    -- Message shown during waiting period
    using = "Using armor... Please wait 8 seconds",
    
    -- Message shown when armor is successfully applied
    success = "Armor applied successfully!"
}

-- Additional Settings
-- Extra configuration options for advanced users
Config.Settings = {
    -- Enable debug messages in server console (true/false)
    enableLogging = false,
    
    -- Allow players to use armor while in vehicles (true/false)
    allowInVehicle = true,
    
    -- Minimum armor level required before allowing new armor use
    minimumArmorCheck = true
}
-- FiveM Resource Manifest File
-- This file defines resource metadata and file structure

-- FiveM version compatibility
fx_version 'cerulean'

-- Target game (Grand Theft Auto V)
game 'gta5'

-- Resource Information
author 'YourName'                           -- Replace with your name
description 'Simple Armor Script for FiveM' -- Resource description
version '1.0.0'                            -- Current version

-- Client-side scripts (runs on player's game client)
client_scripts {
    'config.lua',    -- Load configuration first
    'client.lua'     -- Main client logic
}

-- Server-side scripts (runs on game server)
server_scripts {
    'config.lua',    -- Load configuration first  
    'server.lua'     -- Main server logic
}

-- Get QBCore framework object to access server-side functions
local QBCore = exports['qb-core']:GetCoreObject()

-- Create a useable item that players can right-click in inventory
-- When player uses "armor" item, this function will be executed
QBCore.Functions.CreateUseableItem("armor", function(source, item)
    -- 'source' is the player's server ID who used the item
    -- 'item' contains information about the used item
    
    -- Trigger client-side event to handle armor application
    -- This sends the event to the specific player who used the item
    TriggerClientEvent("customarmor:useArmor", source)
end)
